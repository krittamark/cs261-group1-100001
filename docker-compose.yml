<<<<<<< HEAD

x-kong-config:
  &kong-env
  KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
  KONG_PG_HOST: kong-database
  KONG_PG_USER: ${KONG_PG_USER:-kong}
  KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}

volumes:
  kong_data: {}
  kong_prefix_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs
  kong_tmp_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs

services:

  mssql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: mssql
    ports:
      - "1433:1433"
    env_file:
      - .env
    networks:
      - kong-net
    environment:
      SA_PASSWORD: ${SA_PASSWORD}
      ACCEPT_EULA: Y
    volumes:
      - ./init-scripts:/docker-entrypoint-initdb.d
    command: /opt/mssql/bin/sqlservr & /opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P "${SA_PASSWORD}" -i /docker-entrypoint-initdb.d/startup.sql -C

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/public:/usr/app/public
    command: npm start
    networks:
      - kong-net

  backend:
    build: ./backend
    container_name: backend
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - mssql
    networks:
      - kong-net
  kong-database:
    image: postgres:16.2
    environment:
      POSTGRES_DB: ${KONG_PG_DATABASE:-kong}
      POSTGRES_USER: ${KONG_PG_USER:-kong}
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-kong}
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-d",
          "${KONG_PG_DATABASE:-kong}",
          "-U",
          "${KONG_PG_USER:-kong}"
        ]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true
    networks:
      - kong-net
    volumes:
      - kong_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  kong-migrations:
    image: kong:3.6
    command: kong migrations bootstrap
    depends_on:
      - kong-database
    environment:
      <<: *kong-env
    networks:
      - kong-net
    restart: on-failure

  kong:
    image: kong:3.6
    user: "${KONG_USER:-kong}"
    environment:
      <<: *kong-env
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_ADMIN_GUI_LISTEN: "${KONG_ADMIN_GUI_LISTEN:-0.0.0.0:8002}"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_PREFIX: ${KONG_PREFIX:-/var/run/kong}
      KONG_DECLARATIVE_CONFIG: "/opt/kong/kong.yaml"
    networks:
      - kong-net
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
      - "8002:8002"
    healthcheck:
      test: [ "CMD", "kong", "health" ]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure:5
    read_only: true
    volumes:
      - kong_prefix_vol:${KONG_PREFIX:-/var/run/kong}
      - kong_tmp_vol:/tmp
      - ./config:/opt/kong
    security_opt:
      - no-new-privileges

# network
networks:
  kong-net:
    external: false
=======
version: "3.9"

volumes:
    mssql_data: {} # Persistent volume for MSSQL data
    kong_data: {} # Persistent volume for Kong database
    kong_prefix_vol:
        driver_opts:
            type: tmpfs
            device: tmpfs
    kong_tmp_vol:
        driver_opts:
            type: tmpfs
            device: tmpfs

networks:
    kong-net:
        external: false

services:
    mssql:
        image: mcr.microsoft.com/mssql/server:2019-latest
        container_name: mssql
        ports:
            - "1433:1433"
        environment:
            SA_PASSWORD: cs261myPassword1234
            ACCEPT_EULA: Y
        networks:
            - kong-net
        volumes:
            - mssql_data:/var/opt/mssql # Persist database data
            - ./init-scripts:/docker-entrypoint-initdb.d # Mount initialization scripts

    frontend:
        build: ./frontend
        container_name: frontend
        ports:
            - "3000:3000"
        networks:
            - kong-net

    backend:
        build: ./backend
        container_name: backend
        ports:
            - "8080:8080"
        depends_on:
            - mssql
        networks:
            - kong-net

    kong-database:
        image: postgres:16.2
        container_name: kong-database
        environment:
            POSTGRES_DB: kong
            POSTGRES_USER: kong
            POSTGRES_PASSWORD: kong
        ports:
            - "5432:5432"
        networks:
            - kong-net
        volumes:
            - kong_data:/var/lib/postgresql/data

    kong-migrations:
        image: kong:3.6
        container_name: kong-migrations
        command: kong migrations bootstrap
        depends_on:
            - kong-database
        environment:
            KONG_PG_DATABASE: kong
            KONG_PG_HOST: kong-database
            KONG_PG_USER: kong
            KONG_PG_PASSWORD: kong
        networks:
            - kong-net

    kong:
        image: kong:3.6
        container_name: kong
        environment:
            KONG_PG_DATABASE: kong
            KONG_PG_HOST: kong-database
            KONG_PG_USER: kong
            KONG_PG_PASSWORD: kong
            KONG_ADMIN_ACCESS_LOG: /dev/stdout
            KONG_ADMIN_ERROR_LOG: /dev/stderr
            KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl
            KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
            KONG_ADMIN_GUI_LISTEN: 0.0.0.0:8002
            KONG_PROXY_ACCESS_LOG: /dev/stdout
            KONG_PROXY_ERROR_LOG: /dev/stderr
            KONG_PREFIX: /var/run/kong
            KONG_DECLARATIVE_CONFIG: /opt/kong/kong.yaml
        ports:
            - "8000:8000"
            - "8443:8443"
            - "8001:8001"
            - "8444:8444"
            - "8002:8002"
        healthcheck:
            test: ["CMD", "kong", "health"]
            interval: 10s
            timeout: 10s
            retries: 10
        networks:
            - kong-net
        volumes:
            - kong_prefix_vol:/var/run/kong
            - kong_tmp_vol:/tmp
            - ./config:/opt/kong
>>>>>>> 2621e3b0c0752b920a07442fd9aeda0e3cf48b30
